# Generated by Django 5.2.5 on 2025-08-19 06:37

import django.core.validators
import django.db.models.constraints
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('payment', '0009_alter_expensecategory_created_by_and_more'),
        ('properties', '0004_alter_bed_created_by_alter_bed_updated_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InvoiceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('generate_type', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic')], default='automatic', max_length=16)),
                ('period', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='monthly', max_length=16)),
                ('generate_on', models.CharField(choices=[('start', 'Start of Period'), ('end', 'End of Period')], default='start', max_length=8)),
                ('monthly_cycle', models.CharField(choices=[('calendar_month', 'Calendar Month'), ('checkin_date', 'Check-in Date'), ('custom_day', 'Custom Day')], default='checkin_date', max_length=20)),
                ('monthly_custom_day', models.PositiveSmallIntegerField(blank=True, help_text='Required when monthly_cycle=custom_day (1-31)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('weekly_cycle', models.CharField(choices=[('calendar_week', 'Calendar Week'), ('checkin_date', 'Check-in Date'), ('custom_day', 'Custom Day')], default='checkin_date', max_length=20)),
                ('weekly_custom_weekday', models.PositiveSmallIntegerField(blank=True, help_text='Required when weekly_cycle=custom_day (0=Mon .. 6=Sun)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('notes', models.TextField(blank=True, help_text='Optional internal notes')),
                ('building', models.ForeignKey(blank=True, help_text='Optional: override settings for a specific building', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoice_settings', to='properties.building')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(help_text='PG Admin owner of these settings', on_delete=django.db.models.deletion.CASCADE, related_name='paymentapp_invoicesettings_owner', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['owner_id', 'building_id', '-created_at'],
                'indexes': [models.Index(fields=['owner'], name='idx_invoicesettings_owner'), models.Index(fields=['building'], name='idx_invoicesettings_building')],
                'constraints': [models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('owner', 'building'), name='uniq_invoicesettings_owner_building')],
            },
        ),
    ]
