# Generated by Django 5.2.5 on 2025-08-16 03:19

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0003_remove_booking_bookings_bo_booking_839ec2_idx_and_more'),
        ('properties', '0003_bed_monthly_rent'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cycle_month', models.DateField(help_text='First day of the billed month (YYYY-MM-01)')),
                ('issue_date', models.DateField(default=django.utils.timezone.localdate)),
                ('due_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('balance_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('open', 'Open'), ('partial', 'Partially Paid'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('void', 'Void')], default='draft', max_length=16)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='bookings.booking')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-cycle_month', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(max_length=120)),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('taxable', models.BooleanField(default=False)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Percent, e.g. 18 for 18%', max_digits=5)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='payment.invoice')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['invoice', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.CharField(choices=[('cash', 'Cash'), ('upi', 'UPI'), ('card', 'Card'), ('bank', 'Bank Transfer'), ('other', 'Other')], default='cash', max_length=16)),
                ('reference', models.CharField(blank=True, max_length=128)),
                ('received_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paymentapp_payment_created', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payment.invoice')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paymentapp_payment_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-received_at', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(choices=[('utilities', 'Utilities'), ('maintenance', 'Maintenance'), ('supplies', 'Supplies'), ('salary', 'Salary'), ('rent', 'Rent'), ('other', 'Other')], default='other', max_length=20)),
                ('expense_date', models.DateField(default=django.utils.timezone.localdate)),
                ('description', models.TextField(blank=True)),
                ('reference', models.CharField(blank=True, help_text='Receipt/Bill reference', max_length=128)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='expenses/attachments/')),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('building', models.ForeignKey(blank=True, help_text='Optional: attribute expense to a building', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='properties.building')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-expense_date', '-created_at'],
                'indexes': [models.Index(fields=['category', 'expense_date'], name='idx_expense_category_date'), models.Index(fields=['building'], name='idx_expense_building')],
                'constraints': [models.CheckConstraint(condition=models.Q(('amount__gt', 0)), name='expense_amount_positive')],
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['booking'], name='idx_invoice_booking'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['cycle_month'], name='idx_invoice_cycle_month'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status'], name='idx_invoice_status'),
        ),
        migrations.AddConstraint(
            model_name='invoice',
            constraint=models.UniqueConstraint(fields=('booking', 'cycle_month'), name='uniq_invoice_booking_cyclemonth'),
        ),
        migrations.AddConstraint(
            model_name='invoice',
            constraint=models.CheckConstraint(condition=models.Q(('amount__gte', 0), ('tax_amount__gte', 0), ('discount_amount__gte', 0), ('total_amount__gte', 0), ('balance_due__gte', 0)), name='invoice_non_negative_amounts'),
        ),
        migrations.AddIndex(
            model_name='invoiceexpense',
            index=models.Index(fields=['invoice'], name='idx_invoice_expense_invoice'),
        ),
        migrations.AddConstraint(
            model_name='invoiceexpense',
            constraint=models.CheckConstraint(condition=models.Q(('amount__gte', 0)), name='invoice_expense_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='invoiceexpense',
            constraint=models.CheckConstraint(condition=models.Q(('tax_rate__gte', 0)), name='invoice_expense_taxrate_non_negative'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['invoice'], name='idx_payment_invoice'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['received_at'], name='idx_payment_received_at'),
        ),
        migrations.AddConstraint(
            model_name='payment',
            constraint=models.CheckConstraint(condition=models.Q(('amount__gt', 0)), name='payment_amount_positive'),
        ),
    ]
