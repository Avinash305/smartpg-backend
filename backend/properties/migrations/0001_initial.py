# Generated by Django 5.2.5 on 2025-08-15 10:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('code', models.CharField(blank=True, help_text='Optional unique code used internally', max_length=30)),
                ('property_type', models.CharField(choices=[('boys', 'Boys'), ('girls', 'Girls'), ('coliving', 'Co-Living')], default='boys', max_length=20)),
                ('address_line', models.CharField(max_length=400)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.CharField(help_text='6-digit PIN code', max_length=6, validators=[django.core.validators.RegexValidator(message='PIN code must be exactly 6 digits', regex='^\\d{6}$')])),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(blank=True, help_text='Staff or admin managing this property', limit_choices_to={'role': 'pg_staff'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_buildings', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(help_text='PG Admin who owns this property', limit_choices_to={'role': 'pg_admin'}, on_delete=django.db.models.deletion.PROTECT, related_name='owned_buildings', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.PositiveSmallIntegerField(choices=[(0, 'Ground Floor'), (1, '1st Floor'), (2, '2nd Floor'), (3, '3rd Floor'), (4, '4th Floor'), (5, '5th Floor'), (6, '6th Floor'), (7, '7th Floor'), (8, '8th Floor'), (9, '9th Floor'), (10, '10th Floor'), (11, '11th Floor'), (12, '12th Floor'), (13, '13th Floor'), (14, '14th Floor')], help_text='Select floor (0 = Ground)')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='properties.building')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['building', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(help_text='Room number or identifier', max_length=20)),
                ('room_type', models.CharField(choices=[('single_sharing', 'Single Sharing'), ('2_sharing', '2 Sharing'), ('3_sharing', '3 Sharing'), ('4_sharing', '4 Sharing'), ('5_sharing', '5 Sharing'), ('6_sharing', '6 Sharing'), ('7_sharing', '7 Sharing'), ('8_sharing', '8 Sharing'), ('9_sharing', '9 Sharing'), ('10_sharing', '10 Sharing'), ('11_sharing', '11 Sharing'), ('12_sharing', '12 Sharing'), ('13_sharing', '13 Sharing'), ('14_sharing', '14 Sharing'), ('15_sharing', '15 Sharing')], default='single_sharing', max_length=20)),
                ('monthly_rent', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('security_deposit', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='properties.floor')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['floor', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(help_text='Bed number or identifier within the room', max_length=20)),
                ('status', models.CharField(choices=[('available', 'Available'), ('reserved', 'Reserved'), ('occupied', 'Occupied'), ('maintenance', 'Maintenance')], default='available', max_length=12)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beds', to='properties.room')),
            ],
            options={
                'ordering': ['room', 'number'],
            },
        ),
        migrations.AddIndex(
            model_name='building',
            index=models.Index(fields=['owner', 'name'], name='properties__owner_i_985ea1_idx'),
        ),
        migrations.AddIndex(
            model_name='building',
            index=models.Index(fields=['city', 'state'], name='properties__city_cdcebd_idx'),
        ),
        migrations.AddConstraint(
            model_name='building',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='uniq_building_owner_name'),
        ),
        migrations.AddConstraint(
            model_name='floor',
            constraint=models.UniqueConstraint(fields=('building', 'number'), name='uniq_floor_building_number'),
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.UniqueConstraint(fields=('floor', 'number'), name='uniq_room_floor_number'),
        ),
        migrations.AddIndex(
            model_name='bed',
            index=models.Index(fields=['room', 'status'], name='properties__room_id_94bd85_idx'),
        ),
        migrations.AddConstraint(
            model_name='bed',
            constraint=models.UniqueConstraint(fields=('room', 'number'), name='uniq_bed_room_number'),
        ),
    ]
